{"version":3,"sources":["components/shared/services/blog.service.js","components/shared/utils/Notification.js","components/blogs/list.js","components/blogs/new.js","components/blogs/update.js","components/Dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["BlogService","blog","axios","method","url","data","Error","response","statusText","message","blogs","id","params","triggerNotification","notification","title","type","variant","insert","container","animationIn","animationOut","dismiss","duration","onScreen","width","store","addNotification","handleSuccess","handleError","err","BlogList","state","redirect","a","getBlogList","this","setState","Button","size","block","onClick","DashboardRedirect","Jumbotron","fluid","style","textAlign","map","_id","Container","Card","Title","article_title","Subtitle","className","author_name","Img","src","article_image","Body","article_date","Text","text","article_body","min","ideal","max","readMoreText","handleClick","to","Component","BlogNew","useForm","register","handleSubmit","useState","baseImage","setBaseImage","setRedirect","uploadImage","e","file","target","files","convertBase64","base64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","onSubmit","moment","format","newBlog","Object","assign","create","Form","Group","controlId","Label","Control","placeholder","File","label","onChange","as","rows","BlogUpdate","props","setBlog","show","setShow","deleteShow","setDeleteShow","handleClose","handleDeleteClose","match","useEffect","getBlogById","fetchData","updatedBlog","update","onDelete","deleteBlog","defaultValue","Row","Modal","onHide","Header","closeButton","Footer","animation","Dashboard","component","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35246494.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport class BlogService {\r\n    static async create (blog) {\r\n        try {\r\n            await axios({\r\n                method: `POST`,\r\n                url: `http://localhost:5000/create`,\r\n                data: { blog }\r\n            });\r\n\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err.response.statusText} - ${err.response.data.message}`);\r\n        }\r\n    }\r\n\r\n    static async update (blog) {\r\n      try {\r\n          const response = await axios({\r\n              method: `PUT`,\r\n              url: `http://localhost:5000/update`,\r\n              data: { blog }\r\n          });\r\n\r\n          return;\r\n      }\r\n      catch (err) {\r\n          throw new Error(`${err.response.statusText} - ${err.response.data.message}`);\r\n      }\r\n  }\r\n\r\n    static async getBlogList () {\r\n        try {\r\n          const response = await axios({\r\n            method: `GET`,\r\n            url: `http://localhost:5000/list`\r\n          });\r\n\r\n          return response.data.data.blogs;\r\n        } catch (err) {\r\n          throw new Error(`${err.response.statusText} - ${err.response.data.message}`);\r\n        }\r\n      }\r\n\r\n      static async getBlogById (id) {\r\n        try {\r\n          const response = await axios({\r\n            method: `GET`,\r\n            url: `http://localhost:5000/getById`,\r\n            params: {\r\n              id: id\r\n            }\r\n          });\r\n\r\n          return response.data.data.blog[0];\r\n        } catch (err) {\r\n          throw new Error(`${err.response.statusText} - ${err.response.data.message}`);\r\n        }\r\n      }\r\n\r\n    static async deleteBlog (id) {\r\n        try {\r\n          await axios({\r\n            method: `DELETE`,\r\n            url: `http://localhost:5000/`,\r\n            params: {\r\n              id: id\r\n            }\r\n          });\r\n    \r\n          return;\r\n        }\r\n        catch (err) {\r\n          throw new Error(`${err.response.statusText} - ${err.response.data.message}`);\r\n        }\r\n      }\r\n}","import { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\n/**\r\n * notification types:\r\n *  success\r\n *  danger\r\n *  info\r\n *  default\r\n *  warning\r\n */\r\n\r\nexport const triggerNotification = ({ title, message, variant }) => {\r\n  const notification = {\r\n    title, message,\r\n    type: variant,\r\n    insert: `bottom`,\r\n    container: `bottom-left`,\r\n    animationIn: [ `animated`, `fadeIn` ],\r\n    animationOut: [ `animated`, `fadeOut` ],\r\n    dismiss: {\r\n      duration: 3500,\r\n      onScreen: true\r\n    },\r\n    width: 275\r\n  };\r\n  store.addNotification(notification);\r\n};\r\n\r\nexport const handleSuccess = message => {\r\n  triggerNotification({\r\n    variant: `success`,\r\n    title: `Success`,\r\n    message\r\n  });\r\n};\r\n\r\nexport const handleError = err => {\r\n  const message = err.message || `An unknown error has occurred`;\r\n  triggerNotification({\r\n    variant: `danger`,\r\n    title: `Error`,\r\n    message\r\n  });\r\n};\r\n\r\nexport const handleValidationError = err => {\r\n  const message = err.message || `An unknown error has occurred`;\r\n  triggerNotification({\r\n    variant: `warning`,\r\n    title: `Warning`,\r\n    message\r\n  });\r\n};\r\n\r\nexport const handleAsync = func => async (...args) => {\r\n  try {\r\n    return await func(...args);\r\n  } catch (err) {\r\n    handleError(err);\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card, Button, Container, Jumbotron } from 'react-bootstrap';\r\nimport ReadMoreReact from 'read-more-react';\r\n\r\nimport { BlogService } from '../shared/services/blog.service';\r\nimport {handleSuccess, handleError} from '../shared/utils/Notification';\r\n\r\n\r\nclass BlogList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            blogs: [],\r\n            redirect: null\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            const blogs = await BlogService.getBlogList();\r\n            this.setState({\r\n                blogs\r\n            })\r\n            handleSuccess(`Successfully got Blog list`);\r\n        } catch (err) {\r\n            handleError(new Error(`Failed to get Blog list`));\r\n        }\r\n\r\n    }\r\n\r\n    async handleClick(id) {\r\n        this.setState({ redirect: `/blog/${id}/details` });\r\n    }\r\n\r\n    async DashboardRedirect() {\r\n        this.setState({ redirect: `/` });\r\n    }\r\n\r\n    render() {\r\n        const blogs = this.state.blogs;\r\n        const redirect = this.state.redirect;\r\n        return (\r\n            <div >\r\n                <Button variant=\"dark\" size=\"lg\" block onClick={() => this.DashboardRedirect()}>Home Page</Button>\r\n                <Jumbotron fluid>\r\n                    <h1 style={{ textAlign: \"center\" }}>List of Blogs</h1>\r\n                </Jumbotron>\r\n                {\r\n                    blogs.map((blog, _id) => (\r\n                        <div key={_id}>\r\n                            <Container>\r\n                                <Card style={{ width: '70rem' }}>\r\n                                    <Card.Title>{blog.article_title}</Card.Title>\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">By: {blog.author_name}</Card.Subtitle>\r\n                                    <Card.Img variant=\"top\" src={blog.article_image} />\r\n                                    <Card.Body>\r\n                                        {/* <Card.Title>{blog.article_title}</Card.Title>\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">{blog.author_name}</Card.Subtitle> */}\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\">{blog.article_date}</Card.Subtitle>\r\n                                        <Card.Text> <ReadMoreReact text={blog.article_body}\r\n                                            min={80}\r\n                                            ideal={100}\r\n                                            max={200}\r\n                                            readMoreText=\"click here to read more\" /></Card.Text>\r\n                                        <Button variant=\"outline-secondary\" size=\"lg\" block onClick={() => this.handleClick(blog._id)}>Details Page</Button>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Container>\r\n\r\n                        </div>\r\n\r\n                    ))\r\n                }\r\n                {\r\n                    redirect && <Redirect to={redirect} />\r\n                }\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default BlogList;","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport moment from 'moment';\r\nimport { Form, Button, Container, Jumbotron } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {handleSuccess, handleError} from '../shared/utils/Notification';\r\nimport { BlogService } from '../shared/services/blog.service';\r\n\r\nexport default function BlogNew() {\r\n    const { register, handleSubmit } = useForm();\r\n    const [baseImage, setBaseImage] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(null);\r\n\r\n    const uploadImage = async (e) => {\r\n        const file = e.target.files[0];\r\n        const base64 = await convertBase64(file);\r\n        setBaseImage(base64);\r\n    };\r\n\r\n    const convertBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            data.article_date = moment(data.article_date).format('ll');\r\n\r\n            let newBlog = data;\r\n            Object.assign(newBlog, { article_image: baseImage })\r\n\r\n            await BlogService.create(newBlog);\r\n            \r\n            handleSuccess(`Successfully created blog`);\r\n            setRedirect(`/blog/list`)\r\n        } catch (err) {\r\n            handleError(new Error(`Failed to create Blog`));\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setRedirect(`/`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"dark\" size=\"lg\" block onClick={handleClick}>Home Page</Button>\r\n            <Jumbotron fluid>\r\n                <h1 style={{ textAlign: \"center\" }}>New Blog Page</h1>\r\n            </Jumbotron>\r\n            <Container>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Author Name</Form.Label>\r\n                        <Form.Control  {...register(\"author_name\")} type=\"text\" placeholder=\"Author Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Article Title</Form.Label>\r\n                        <Form.Control  {...register(\"article_title\")} type=\"text\" placeholder=\"Article Title\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.File id=\"exampleFormControlFile1\" label=\"Article Image\" onChange={(e) => { uploadImage(e); }} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Article Body</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} {...register(\"article_body\")} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Article Date</Form.Label>\r\n                        <Form.Control  {...register(\"article_date\")} type=\"date\" placeholder=\"Author Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" size=\"lg\" block>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n            {redirect && <Redirect to={redirect} />}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form, Button, Container, Card, Modal, Row, Jumbotron } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport {handleSuccess, handleError} from '../shared/utils/Notification';\r\nimport { BlogService } from '../shared/services/blog.service';\r\n\r\n\r\nexport default function BlogUpdate(props) {\r\n    const { register, handleSubmit } = useForm();\r\n    const [baseImage, setBaseImage] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(null);\r\n    const [blog, setBlog] = useState({});\r\n    const [show, setShow] = useState(false);\r\n    const [deleteShow, setDeleteShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleDeleteClose = () => setDeleteShow(false);\r\n    const handleDeleteShow = () => setDeleteShow(true);\r\n\r\n\r\n    const id = props.match.params.id;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await BlogService.getBlogById(id);\r\n                setBlog(data);\r\n            }\r\n            catch (err) {\r\n                handleError(new Error(`Failed to get Blog data`));\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const uploadImage = async (e) => {\r\n        const file = e.target.files[0];\r\n        const base64 = await convertBase64(file);\r\n        setBaseImage(base64);\r\n    };\r\n\r\n    const convertBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n\r\n            const updatedBlog = {\r\n                author_name: data.author_name ? data.author_name : blog.author_name,\r\n                article_title: data.article_title ? data.article_title : blog.article_title,\r\n                article_body: data.article_body ? data.article_body : blog.article_body,\r\n                article_date: data.article_date ? moment(data.article_date).format('ll') : moment(blog.data.article_date).format('ll'),\r\n                _id: id\r\n            }\r\n\r\n            Object.assign(updatedBlog, { article_image: baseImage ? baseImage : blog.article_image })\r\n\r\n            await BlogService.update(updatedBlog);\r\n            \r\n            handleSuccess(`Successfully updated blog`);\r\n            setRedirect(`/blog/list`);\r\n        } catch (error) {\r\n            handleError(new Error(`Failed to update Blog`));\r\n        }\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        try {\r\n            await BlogService.deleteBlog(id);\r\n            handleSuccess(`Successfully deleted blog`);\r\n            setRedirect(`/blog/list`);\r\n        } catch (error) {\r\n            handleError(new Error(`Failed to delete Blog`));\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setRedirect(`/`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"dark\" size=\"lg\" block onClick={handleClick}>Home Page</Button>\r\n            <Jumbotron fluid>\r\n                <h1 style={{ textAlign: \"center\" }}>{blog.article_title} Details</h1>\r\n            </Jumbotron>\r\n            <Container>\r\n                <Card style={{ width: '70rem' }}>\r\n                    <Card.Title>{blog.article_title}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">By: {blog.author_name}</Card.Subtitle>\r\n                    <Card.Img variant=\"top\" src={blog.article_image} />\r\n                    <Card.Body>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">{blog.article_date}</Card.Subtitle>\r\n                        <Form.Group >\r\n                            <Form.Control as=\"textarea\" rows={3} defaultValue={blog.article_body} />\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Button variant=\"primary\" onClick={handleShow}>open Update Modal</Button>\r\n                            <Button variant=\"danger\" onClick={handleDeleteShow}>open Delete Modal</Button>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n            {\r\n                show == true ? <Modal show={show} onHide={handleClose} size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Update {blog.article_title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Form.Group >\r\n                                <Form.Label>Author Name</Form.Label>\r\n                                <Form.Control  {...register(\"author_name\")} type=\"text\" placeholder=\"Author Name\" defaultValue={blog.author_name} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Article Title</Form.Label>\r\n                                <Form.Control  {...register(\"article_title\")} type=\"text\" placeholder=\"Article Title\" defaultValue={blog.article_title} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.File id=\"exampleFormControlFile1\" label=\"Article Image\" onChange={(e) => { uploadImage(e); }} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Article Body</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={15} {...register(\"article_body\")} defaultValue={blog.article_body} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group >\r\n                                <Form.Label>Article Date</Form.Label>\r\n                                <Form.Control  {...register(\"article_date\")} type=\"date\"\r\n                                    defaultValue={moment(blog.article_date).format(\"YYYY-MM-DD\")}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handleSubmit(onSubmit)}>\r\n                            update\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                    : ``\r\n            }\r\n            {\r\n                deleteShow == true ?\r\n                    <Modal show={deleteShow} onHide={handleDeleteClose} animation={true}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete {blog.article_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Would you like to delete this blog?</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleDeleteClose}>Close</Button>\r\n                            <Button variant=\"danger\" onClick={handleSubmit(onDelete)}>Delete</Button>\r\n                        </Modal.Footer>\r\n                    </Modal> : ``\r\n            }\r\n\r\n\r\n            {redirect && <Redirect to={redirect} />}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Jumbotron, Container, Button } from 'react-bootstrap';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            redirect: null,\r\n        };\r\n    }\r\n\r\n    async handleClick(component) {\r\n        this.setState({ redirect: `/blog/${component}` });\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"dash\">\r\n                    <Jumbotron >\r\n                        <Container>\r\n                            <h1>Welcome to Weds App Assessment</h1>\r\n                        </Container>\r\n                    </Jumbotron>\r\n                    <Button variant=\"primary\" size=\"lg\" block onClick={() => this.handleClick(`new`)}>Create Blog</Button>\r\n                    <Button variant=\"secondary\" size=\"lg\" block onClick={() => this.handleClick(`list`)}>View Blog List</Button>\r\n                </div>\r\n                {\r\n                    redirect && <Redirect to={redirect} />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ReactNotification from 'react-notifications-component'\n\nimport BlogList from './components/blogs/list';\nimport BlogNew from './components/blogs/new';\nimport BlogUpdate from './components/blogs/update';\nimport Dashboard from './components/Dashboard/dashboard';\n\nfunction App() {\n  return <>\n  <ReactNotification />\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/blog/new\" component={BlogNew} />\n        <Route path=\"/blog/list\" component={BlogList} />\n        <Route path=\"/blog/:id/details\" component={BlogUpdate} />\n      </BrowserRouter>\n  </>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}